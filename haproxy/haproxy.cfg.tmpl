global
    log stdout format raw local0
    maxconn 500
    ssl-dh-param-file /usr/local/etc/haproxy/dhparam.pem

    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets


defaults
    mode http
    timeout connect 5s
    timeout client 50s
    timeout server 50s

    # Slowloris attacks
    timeout http-request 5s
    option http-buffer-request

    log global
    option httplog
    option log-health-checks
    option log-separate-errors


frontend http-in
    bind *:80
    maxconn 50

    # Limiting Request Rates
    http-request track-sc0 src table per_ip_rates
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 100 }

    # Deny illegal user agents
    http-request deny if { req.hdr(user-agent) -i -m sub curl phantomjs slimerjs }
    http-request deny unless { req.hdr(user-agent) -m found }

    # Define Let's Encrypt path
    acl uri_letsencrypt path_beg /.well-known/acme-challenge/

    # Redirect all traffic except Let's Encrypt path
    redirect scheme https if !{ ssl_fc } !uri_letsencrypt

    # Add security headers
    http-response add-header Content-Security-Policy upgrade-insecure-requests
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Referrer-Policy no-referrer-when-downgrade

    # Define backends
    use_backend be_default if uri_letsencrypt
    default_backend be_default


frontend https-in
    bind *:443 ssl crt /ssl/ alpn http/1.1,h2
    maxconn 50

    # Limiting Request Rates
    http-request track-sc0 src table per_ip_rates
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 100 }

    # Deny illegal user agents
    http-request deny if { req.hdr(user-agent) -i -m sub curl phantomjs slimerjs }
    http-request deny unless { req.hdr(user-agent) -m found }

    # Add security headers
    http-response set-header Strict-Transport-Security max-age=63072000
    http-response add-header Content-Security-Policy upgrade-insecure-requests
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Referrer-Policy no-referrer-when-downgrade

    acl host_www_mywebshop_com hdr(host) -i www.mywebshop.com
    use_backend be_www_mywebshop_com if host_www_mywebshop_com

    default_backend be_default


backend be_www_mywebshop_com
    http-request add-header X-Forwarded-Proto https

    # Set custom response headers
    http-response set-header X-Powered-By "Snert and brown beans"
    http-response set-header server "Microwave 2.4.001.2.5567.GA"

    compression algo gzip
    compression type text/html text/plain text/css application/x-javascript

    # Define server running at localhost
    server localhost8001 127.0.0.1:8001 maxconn 50 check


backend be_default
    server localhost8888 127.0.0.1:8888 maxconn 50 check
    http-request set-header Host Default

    # Set custom response headers
    http-response set-header X-Powered-By "Snert and brown beans"
    http-response set-header server "Microwave 2.4.001.2.5567.GA"


backend per_ip_rates
    stick-table type ip size 1m expire 10m store http_req_rate(10s)

